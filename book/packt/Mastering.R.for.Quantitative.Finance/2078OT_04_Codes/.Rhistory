install.packages(Quandl") 
library(Quandl)
library(xts)
currencies <- c( "USD", "CHF", "GBP", "JPY", "RUB", "CAD", "AUD")
currencies <- paste("QUANDL/EUR", currencies, sep = "")
currency_ts = lapply(as.list(currencies), Quandl, start_date="2005-01-01",end_date="2013-06-07", type="xts")
Q <- cbind(currency_ts[[1]]$Rate,currency_ts[[3]]$Rate,currency_ts[[6]]$Rate,currency_ts[[7]]$Rate)
matplot(Q, type = "l", xlab = "Time", ylab = "FX rate", main = "Exchange rates	", xaxt = 'n', yaxt = 'n' )
ticks = axTicksByTime(currency_ts[[1]])
abline(v = ticks,h = seq(min(Q), max(Q), length = 5), col = "grey", lty = 4)
axis(1, at = ticks, labels = names(ticks))
axis(2, at = seq(min(Q), max(Q), length = 5), labels = round(seq(min(Q), max(Q), length = 5), 1))
install.packages("Quandl")
library(Quandl)
library(xts)
currencies <- c( "USD", "CHF", "GBP", "JPY", "RUB", "CAD", "AUD")
currencies <- paste("QUANDL/EUR", currencies, sep = "")
currency_ts <- lapply(as.list(currencies), Quandl, start_date="2005-01-01",end_date="2013-06-07", type="xts")
Q <- cbind(
currency_ts[[1]]$Rate,currency_ts[[3]]$Rate,currency_ts[[6]]$Rate,currency_ts[[7]]$Rate)
matplot(Q, type = "l", xlab = "", ylab = "", main = "USD, GBP, CAD, AUD", xaxt = 'n', yaxt = 'n' )
ticks = axTicksByTime(currency_ts[[1]])
abline(v = ticks,h = seq(min(Q), max(Q), length = 5), col = "grey", lty = 4)
axis(1, at = ticks, labels = names(ticks))
axis(2, at = seq(min(Q), max(Q), length = 5), labels = round(seq(min(Q), max(Q), length = 5), 1))
legend("topright", legend = c("USD/EUR", "GBP/EUR", "CAD/EUR", "AUD/EUR"), col = 1:4, pch = 19)
bmw_stock<- new.env()
getSymbols("BMW.DE", env = bmw_stock, src = "yahoo", from = as.Date("2010-01-01"), to = as.Date("2013-12-31"))
BMW<-bmw_stock$BMW.DE
head(BMW)
library(quantmod)
bmw_stock<- new.env()
getSymbols("BMW.DE", env = bmw_stock, src = "yahoo", from = as.Date("2010-01-01"), to = as.Date("2013-12-31"))
BMW<-bmw_stock$BMW.DE
head(BMW)
chartSeries(BMW,multi.col=TRUE,theme="white")
addMACD()
addBBands()
BMW_return <- 
log(BMW$BMW.DE.Close/BMW$BMW.DE.Open)
qqnorm(BMW_return, main = "Normal Q-Q Plot of BMW daily log return",
 xlab = "Theoretical Quantiles",
        ylab = "Sample Quantiles", plot.it = TRUE, datax = FALSE
 )
qqline(BMW_return, col="red")
install.packages("bigmemory")
install.packages("biganalytics")
install.packages("bigrf", type="source")
install.packages("bigr")
install.packages("bigrf")
library(bigmemory)
library(biganalytics)
"FlightTicketData.csv", type='integer', header=TRUE, backingfile="data.bin",descriptorfile="data.desc")
"FlightTicketData.csv", type='integer', header=TRUE, backingfile="data.bin", descriptorfile="data.desc")
("FlightTicketData.csv", type='integer', header=TRUE, backingfile="data.bin",descriptorfile="data.desc")
("FlightTicketData.csv" type='integer', header=TRUE, backingfile="data.bin",descriptorfile="data.desc")
"FlightTicketData.csv", type='integer', header=TRUE, backingfile="data.bin",descriptorfile="data.desc"
"FlightTicketData.csv" type='integer', header=TRUE, backingfile="data.bin",descriptorfile="data.desc"
res_bigkmeans <- lapply(1:10, function(i) {
 bigkmeans(x, centers=i,iter.max=50,nstart=1)
 })
lapply(res_bigkmeans, function(x) x$withinss)
install.packages("bigkmeans")
install.packages("ff")
install.packages("biglm")
library(ff)
library(biglm)
download.file("http://www.irs.gov/file_source/pub/irs-soi/12zpallagi.csv","soi.csv")
x <- read.csv.ffdf(file="soi.csv",header=TRUE)
require(biglm)
mymodel<-biglm(A02300 ~  A00200+AGI_STUB+NUMDEP+MARS2,data=x)
summary(mymodel)
mymodel<-biglm(A02300 ~  A00200+AGI_STUB+NUMDEP+MARS2,data=x)
mymodel<-biglm(A02300 ~  A00200 + AGI_STUB + NUMDEP + MARS2,data=x)
mymodel<-biglm(A02300~A00200+AGI_STUB+NUMDEP+MARS2,data=x)
mymodel<-biglm(A02300 ~ A00200+AGI_STUB+NUMDEP+MARS2,data=x)
mymodel<-biglm(A02300 ~  A00200+AGI_STUB+NUMDEP+MARS2,data=x)
summary(mymodel)
library(Quandl)
library(xts)
EURUSD <- Quandl("QUANDL/EURUSD", 
     start_date="2014-01-01",end_date="2014-07-01", type="xts")
install.packages("Quandl")
library("Quansl")
library("Quandl")
library(xts)
EURUSD <- Quandl("QUANDL/EURUSD", 
     start_date="2014-01-01",end_date="2014-07-01", type="xts")
USDEUR <- Quandl("QUANDL/USDEUR", 
     start_date="2014-01-01",end_date="2014-07-01", type="xts")
dev.new(width = 15, height = 8)
par(mfrow = c(1, 2))
plot(USDEUR)
plot(EURUSD)
USDEUR[1:5,]
