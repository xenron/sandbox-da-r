> model2 <- update(model, ~ . â€“ A:B) 
> ?formula
>plot(c(3,4), c(7,4), ylab="y", xlab="x", main="Slope from coordinates (3, 7) and (4,4)", ylim=c(0,10), xlim=c(0, 10))
>lines(c(3,3), c(7,4))
>lines(c(3,4), c(4,4))
>text(2,5.5, "delta y") 
>text(3.5,3.5, "delta x")
> lines(c(3,4), c(7,4), col="red", lwd=3)
> (4-7)/(4-3)
> 4 - (-3)*(4)
> abline(16, -3)
> gapdh.qPCR <- read.table(header=TRUE, text='
> str(gapdh.qPCR)
> library(reshape2)
> gapdh.qPCR <- melt(gapdh.qPCR, id.vars=c("GAPDH", "RNA_ng"), value.name="Ct_Value")
> str(gapdh.qPCR)
> attach(gapdh.qPCR)
> names(gapdh.qPCR)
> #plots two graphs side by side
> par(mfrow=c(1,2)) 
> plot(RNA_ng, Ct_Value)
> plot(log(RNA_ng), Ct_Value)
> lm(Ct_Value ~ log(RNA_ng))
> model <- lm(Ct_Value ~ log(RNA_ng))
> summary(model)
> summary.aov(model)
> par(mfrow=c(2,2)) 
> plot(model)
> RNA_ng[18]
> Ct_Value[18]
> model2 <- update(model, subset=(Ct_Value !=37.2))
> summary(model2)
> model2
> patient.fatigue <- read.table(header=TRUE, text='
>attach(patient.fatigue)
> aov(drugA_dose ~ fatigue)
> summary(aov(drugA_dose ~ fatigue))
> modelA <- aov(drugA_dose ~ fatigue)
> par(mfrow=c(2,2)) 
> plot(modelA)  
> modelB <- update(modelA, subset=(patients !=20))
> summary(modelB)
>
> summary.lm(modelB)
> patient.sex <- as.factor(c("F", "F", "F", "M", "M", "F", "M", "M", "M", "F", "F", "M", "M", "F", "F", "F", "M", "M", "F", "M")) 
> modelC = aov(drugA_dose ~ fatigue*patient.sex) 
> summary(modelC)
> anova(modelA, modelC)
> cmp1.ld <- read.table(header=TRUE, text='
> attach(cmp1.ld)
> proportion_dead <- numdead/20
> plot(proportion_dead ~ lethaldose, pch=as.character(sex))
> counts <- cbind(numdead, numalive) 
> cmp1.ld.model <- glm( counts ~ sex * lethaldose, family=binomial)
> summary(cmp1.ld.model)
> 3.939/8
> summary(glm( counts ~ sex * lethaldose, family=quasibinomial))
> cmp1.ld.model3 <- update(cmp1.ld.model, ~ . -sex:lethaldose )
> summary(cmp1.ld.model3)
> anova(cmp1.ld.model, cmp1.ld.model3, test="Chi")
> pregnancies <- sample(0:25, 300,replace=T)
> glucose <- sample(65:200, 300,replace=T)
> pressure <-  sample(50:120, 300,replace=T)
> insulinD <- abs(rnorm(150, 450, 100))
> insulinN <- abs(rnorm(150, 65, 75))
> insulin <- c(insulinD, insulinN)
> weight <- sample(20:70, 300,replace=T)
> library(mgcv)
> mouse.data.gam <- gam(pregnancies ~ s(glucose) + s(pressure) + s(insulin) + s(weight))
> summary(mouse.data.gam)
> ?summary.gam
> par(mfrow=c(2,2))
> plot(mouse.data.gam)
> par(mfrow=c(1,1))
> vis.gam(mouse.data.gam,theta=-35,color="topo")
> gam.check(mouse.data.gam) 
> mouse.data.gam2 <- gam(pregnancies ~ s(insulin))
> summary(mouse.data.gam2)
>  AIC(mouse.data.gam, mouse.data.gam2)
> set.seed(459)
> Bluegill.length <- sample(seq(15, 22.5, by=0.5), 50, replace=T)
> Bluegill.weight <- sample(seq(0.2, 0.8, by=0.05), 50, replace=T)
> Bowfin.length <- sample(seq(46, 61, by=0.5), 50, replace=T)
> Bowfin.weight <- sample(seq(1.36, 3.2, by=0.5), 50, replace=T)
> Carp.length <- sample(seq(30, 75, by=1), 50, replace=T)
> Carp.weight <- sample(seq(0.2, 3.5, by=0.1), 50, replace=T)
> Goldeye.length <- sample(seq(25, 38, by=0.5), 50, replace=T)
> Goldeye.weight <- sample(seq(0.4, 0.54, by=0.01), 50, replace=T)
> Largemouth_Bass.length <- sample(seq(22, 55, by=0.5), 50, replace=T)
> Largemouth_Bass.weight <- sample(seq(0.68, 1.8, by=0.01), 50, replace=T)
> weight <-c(Bluegill.weight, Bowfin.weight, Carp.weight, Goldeye.weight, Largemouth_Bass.weight)
> length <-c(Bluegill.length, Bowfin.length, Carp.length, Goldeye.length, Largemouth_Bass.length)
> speed <- rnorm(50*5, 7.2, sd=1.8)
> fish <- c(rep("Bluegill", 50), rep("Bowfin", 50), rep("Carp", 50), rep("Goldeye", 50), rep("Largemouth_Bass", 50))
> fish.data <- data.frame(length, weight, speed, fish) 
> str(fish.data)
> plot3DfishData <- function(x, y, z, data=fish.data){
> # Load the scatterplot3d package
> library(scatterplot3d)
> par(mfrow = c(1, 1))
> plot3DfishData(1, 2, 3)
> legend(locator(1),levels(fish.data$fish), col=c("blue", "black", "red", "green", "turquoise"), lty=c(1, 1, 1, 1, 1), lwd=3, box.lwd = 1,box.col = "black",bg = "white")
> par(mfrow = c(2, 2))
> plot3DfishData(1, 2, 3)
> plot3DfishData(2, 3, 4)
> plot3DfishData(3, 4, 1)
> plot3DfishData(4, 1, 2)
> library("MASS")
> fish.lda <- lda(fish ~ ., data=fish.data, prior = c(1,1,1,1,1)/5)
> fish.lda
> fish.lda$counts
> fish.lda$svd
> set.seed(10)
> train100 <- sample(1:nrow(fish.data), 100) 
> table(fish.data$fish[train100]) 
> fish100.lda <- lda(fish ~ ., data=fish.data, prior = c(1,1,1,1,1)/5, subset = train100)
> predict.fish100 <- predict(fish100.lda)
> table(fish.data$fish[train100], predict.fish100$class) 
> plot(predict.fish100$x, 
> text(predict.fish100$x, 
> abline(h=0, col="gray")
> abline(v=0, col="gray") 
> library("ggplot2")
> p <- ggplot(as.data.frame(predict.fish100$x), aes(x=LD1,y=LD2,col=fish.data$fish[train100])) + geom_point() + geom_text(aes(label = as.character(predict.fish100$class)))
> # Adjust legend size
> p <- p + theme(legend.title=element_blank(), legend.text = element_text( size = 20, face = "bold"))
> p <- p + theme(axis.title = element_text(face="bold", size=20),
> p 
> predict.new <- predict(fish100.lda, newdata=fish.data[-train100, ])
> table(fish.data$fish[-train100], predict.new$class)
> TAB <- table(fish.data$fish[-train100], predict.new$class)
> mcrlda <- 1 - sum(diag(TAB))/sum(TAB)
> mcrlda
> fish.data.mx <- as.matrix(fish.data[, 1:3])
> fish.data.log <- log(fish.data.mx) 
> fish.log.pca <- prcomp(fish.data.log, scale=T, center=T)
> summary(fish.log.pca) 
> print(fish.log.pca)
> plot(fish.log.pca, ylim=c(0, 2)) #plot not shown
> library("ggplot2")
> loadings <- as.data.frame(fish.log.pca$rotation)
> # Add a column with the name of each variable to the loadings data frame.
> loadings$variables <- colnames(fish.data[,1:3])
> # Plot figure with qplot()
> q <- qplot(x = variables, y = PC1, data = loadings, geom = "bar", stat="identity")
> # Adjust axis label sizes
> q + theme(axis.title = element_text(face="bold", size=20), axis.text  = element_text(size=18))
> scores <- as.data.frame(fish.log.pca$x)
> q2 <- qplot(x = PC1, y = PC2, data = scores, geom = "point", col = fish.data$fish)
> q2 <- q2 + theme(legend.title=element_blank(), legend.text = element_text( size = 20, face = "bold"))
> q2 <- q2 + theme(axis.title = element_text(face="bold", size=20), axis.text  = element_text(size=18))
> q2
> biplot(fish.log.pca) 
> library(devtools)
> install_github("ggbiplot", "vqv")
> library(ggbiplot)
> fish.class  <- fish.data$fish  
> g <- ggbiplot(fish.log.pca, obs.scale = 1, var.scale = 1, groups = fish.class, ellipse = TRUE, circle = TRUE)
> g <- g + scale_color_discrete(name = '')
> g <- g + theme(legend.direction = 'horizontal', 
> g <- g + theme(legend.title=element_blank(), legend.text = element_text( size = 20, face = "bold"))
> g <- g + theme(axis.title = element_text(face="bold", size=20), axis.text  = element_text(size=18))
> g
> library(rgl)
> fish.pca.col=c("red", "blue", "green", "magenta", "black")
> plot3d(fish.log.pca$x[,1:3], col=fish.pca.col[sort(rep(1:5, 50))])
> rgl.snapshot("PCAfigure1.png")
> set.seed(44)
> cl <- kmeans(fish.data[,1:3],5)
> fish.data$cluster <- as.factor(cl$cluster)
> plot3d(fish.log.pca$x[,1:3], col=fish.data$cluster, main="k-means clusters")
> rgl.snapshot("Clusterfigure1.png")
> with(fish.data, table(cluster, fish))
> di <- dist(fish.data[,1:3], method="euclidean")
> tree <- hclust(di, method="ward")
> fish.data$hcluster <- as.factor((cutree(tree, k=5)-2) %% 3 +1)
> plot(tree, xlab="", cex=0.2)
> rect.hclust(tree, k=5, border="red") 
> with(fish.data, table(hcluster, fish))
