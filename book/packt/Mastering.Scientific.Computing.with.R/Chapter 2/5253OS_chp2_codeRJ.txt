> load(url("http://www.ebi.ac.uk/arrayexpress/files/E-GEOD-19577/E-GEOD-19577.eSet.r"))
> MLLpartner.ds <- study
> library("affy")
> library("Biobase")
> AEsetnorm = rma(MLLpartner.ds)
> head(exprs(AEsetnorm)) #output shown truncated
> probeA <- as.numeric(exprs(AEsetnorm)[1,])
> probeA <- setNames(probeA, colnames(exprs(AEsetnorm)))
> probeB <- as.numeric(exprs(AEsetnorm)[2,])
> probeB <-setNames(probeB, colnames(exprs(AEsetnorm)))
> MLLpartner.mx <- as.matrix(exprs(AEsetnorm))
> #Lets save the object to our session
> dump("MLLpartner.mx", "MLLpartner.R")
> class(MLLpartner.mx)
> dim(MLLpartner.mx)
> summary(probeA)
> summary(MLLpartner.mx) #output truncated
> min(probeA)
> max(probeA)
> mean(probeA)
> median(probeA)
> quantile(probeA)
> quantile(probeA, probs = c(0.1, 0.2, 0.6, 0.9))
> round(mean(probeA), 2)
> df <- data.frame(expr_probeA=probeA, expr_probeB=probeB, drugA_response= factor(rep(c("success", "fail"), 21)))
> head(df)
> by(df, df$drugA_response, summary)
> max(probeA) - min(probeA)
> range(probeA)
> mean(probeA)
> probeA.soq <- sum((probeA-mean(probeA))^2)
> d.f <- length(probeA) - 1
> probeA.soq/(d.f)
> sqrt(var(probeA))
> sd(probeA)
> sqrt(var(probeA)/length(probeA))
> qt(.975, d.f)* std.err.s2A
> qnorm(0.65, mean=7.5, sd=4)
> rpois(7, lambda=4)
> ld.mean <- 7.5
> ld.sd <- 1.5
> ld.mean+3*ld.sd
>  ld.mean-3*ld.sd
> x <- seq(0, 16, length=100)
> nd.height <- dnorm(x, mean = 7.5, sd = 1.5)
> plot(x, nd.height, type = "l", xlab = "Liters per day",  ylab = "Density", main = "Liters of water drank by school children < 12 years old") 
> pnorm(4, mean = 7.5, sd = 1.5, lower.tail = TRUE)
> ld.cdf <- pnorm(x, mean = 7.5, sd = 1.5, lower.tail = TRUE)
> plot(x, ld.cdf, type = "l", xlab = " Liters per day ", ylab = "Cumulative Probability")
>  plot(x, nd.height, type = "l", xlab = "Liters per day",  ylab = "Density")
>  ld.lower <- 8
>  ld.upper <- 15
>  i <- x >= ld.lower & x <= ld.upper #returns a logical vector
> polygon(c(ld.lower,x[i], ld.upper), c(0, nd.height [i],0), col="red")
> abline(h = 0, col = "gray")
> pb <- round(pnorm(8, mean = 7.5, sd = 1.5, lower.tail = FALSE) 
> pb
> pb.results <- paste("Cumulative probabily of a child drinking > 8L/day", pb, sep=": ")
> title(pb.results)
> par(mfrow=c(1,2))
> qqline(probeA, distribution = qnorm,  probs = c(0.25, 0.75))
> require(MASS)
> fitdistr(probeA, 'gamma')
> gamma.par <- fitdistr(probeA, 'gamma')
> str(gamma.par)
> gamma.par$estimate['shape'] #or gamma.par$estimate[1]  
> s <- gamma.par$estimate['shape']
> r <- gamma.par$estimate['rate']
> theoretical.probs <- seq(1:length(probeA))/(length(probeA)+1)
> theoretical.quantiles <- qgamma(theoretical.probs,shape=s,rate=r)
> plot(theoretical.quantiles, sort(probeA),xlab="Theoretical Quantiles",ylab="Sample Quantiles",main="Gamma QQ-plot")
> qF <- function(p) qgamma(p, shape=s, rate=r)
> qqline(y=sort(probeA), distribution=qF)
>par(mfrow=c(1,1))
> ks.test(probeA, "pgamma", 3, 2)
> require(nortest)
> ad.test(probeA)
> require("fBasics")
> skewness(probeA)
> abs(skewness(probeA))/sqrt(6/length(probeA))
> 1- pt(0.389, 41)
> kurtosis(probeA)
> abs(kurtosis(probeA))/sqrt(24/length(probeA))
> 1-pt(0.750, 41)
> install.packages("propagate")
> library("propagate")
> set.seed(275) #so you get the same results 
> observations <- rnorm(10000, 5)
> distTested <- fitDistr(observations)
> distTested$aic
> EXPR <- expression(x^(3 * y)-1)
> x <- c(6, 0.1)
> y <- c(2, 0.1)
> DF <- cbind(x, y)
> RES <- propagate(expr = EXPR, data = DF, type = "stat", do.sim = TRUE, verbose = TRUE)
> testedDistrEXPR <- fitDistr(RES)
> testedDistrEXPR$aic
> female.heights <- c(117, 162, 143, 120, 183, 175, 147, 145, 165, 167, 179, 116)
> mean(females.heights)
> wilcox.test(female.heights, mu=171)
> wilcox.test(female.heights, mu=171, conf.int = TRUE, conf.level = 0.99)
> f <- numeric(10000)
> for(i in 1:10000) {
 f[i] <- mean(sample(female.heights, replace=TRUE))
}
> hist(f, xlab="bootstrap means")
> t.test(female.heights, mu=171)
> var.test(probeA, probeB)
> head(df)
> kruskal.test(expr_probeA ~ drugA_response, data = df)
> waiting.period <- c(3, 5, 4, 5.5, 3.5, 2.5, 3, 5, 4.5, 3, 3.5)
> above4.hrs <- ifelse(waiting.period > 4, "yes", "no")
> above4hs.table <- table(above4.hrs)
> above4hs.table
> prop.test(4, n=11, p=0.5, alternative="two.sided", correct=FALSE)
> prop.test(4, n=11, p=0.5, alternative="two.sided", correct=TRUE)
> binom.test(4, n=11, p=0.5)
> t.test(probeA, probeB)
> wilcox.test(probeA, probeB)
> wilcox.test(probeA, probeB, paired=T)
> promoted.employees <-c(16, 63)
> total.employees <- c(430, 1053)
> prop.test(promoted.employees, total.employees)
> trait.counts <- matrix(c(24, 14, 11, 47), nrow=2)
> colnames(trait.counts) <- c("Blue eyes", "Brown eyes")
> rownames(trait.counts) <- c("Blond hair", "Dark brown hair")
> trait.counts   
> chisq.test(trait.counts)
> chisq.test(trait.counts, correct=FALSE)
> data.counts <- matrix(c(7, 5, 2, 6), nrow=2)
> fisher.test(data.counts)
>setwd("/directory_where_file_was_downloaded/")
> library("gdata")
> fertility_rates.df <- read.xls("fertilityData.xlsx")
> colnames(fertility_rates.df)[2:3] <- c("Age 35-39", "Age 40-44")
> head(fertility_rates.df)
> fertilityRates.ts <- ts(fertility_rates.df[, 2:3], start=c(1997, 1), end=c(2012, 1), frequency=1)
> fertilityRates.ts
> plot(fertilityRates.ts, main="Fertility Rates for Females in NYC from 1997 to 2012", xlab="Year")
> library("tseries")
> adf.test(fertilityRates.ts[, 1])
> adf.test(fertilityRates.ts[, 2])
> testTS <- ts(fertility_rates.df[1:7, 2], start=c(1997, 1), frequency=1)
>  adf.test(testTS)
> install.packages("quantmod")
> library("quantmod") 
> fbstock <-getSymbols("FB", src="yahoo", from= '2012-06-18', end='2014-11-28', auto.assign=FALSE)
> head(fbstock)
> chartSeries(fbstock[, 4:5], theme="white", up.col="black")
> plot.ts(as.ts(fbstock[, 4:5]), main="FACEBOOK Stock Information from 2012-06-18 to 2014-11-28")
> require(tseries) 
> adf.test(fbstock[, 4])
> kpss.test(fbstock[, 4])
